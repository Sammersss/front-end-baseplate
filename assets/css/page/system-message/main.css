/*--------------------------------

	Default colour variable fallbacks

*/
/*--------------------------------

	Typography

*/
/*--------------------------------

	Layout

*/
/*

use:

	get the value of a particular breakpoint

example:

	.box {
		width: breakpoint("phone-wide");
	}

	would generate:

	.box {
		width: 480px;
	}

*/
/*
ordered from high to low
suggested naming convention would be the class/ID the z-index is going on
*/
/*--------------------------------

	Colours

*/
/*--------------------------------

	Easing/Timing

*/
/*--------------------------------

	Normalise includes

*/
/*--------------------------------

	System Message (404)

*/
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address styling not present in IE 8/9.
 */
/**
 * Address inconsistent and variable font size in all browsers.
 */
/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address differences between Firefox and other browsers.
 */
/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
       box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: none;
  margin: 0;
  padding: 0; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Remove some normalized spacing
   ========================================================================== */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, legend,
table, th, td, caption,
hr, figure {
  margin: 0;
  padding: 0; }

/*--------------------------------

	Grids

*/
/*--------------------------------

	Z-indexing

	use:

		instead of guessing or adding random z-indexes throughout the project (e.g. 100000, 999999, etc.), call the z-index function to generate a z-index from a stacked list of classes

	prerequisits:

		$z-indexes list must exist in variables file

	example:

		.box {
			z-index: z('box');
		}

*/
/*--------------------------------

	Photoshop letter spacing

	use:

		for simple conversion between Photoshop letter-spacing to ems

	prerequisits:

		$letter-spacing list must exist in variables file

	example:

		.awesome-heading {
			letter-spacing: ls('awesome-heading');
		}

		could generate (if "awesome-heading") is 2nd in the list:

		.awesome-heading {
			letter-spacing: -0.01em;
		}

*/
/*--------------------------------

	Media Queries

	used for outputting content either between media query tags, or without (for fixed-width.scss)

	example: basic usage

	.element {
		width: 50%;

		@include mq("tablet-small") {
			width: 20%;
		}
	}

	example: using max-width

	.element {
		width: 50%;

		@include mq("tablet-small", "max") {
			width: 20%;
		}
	}

*/
/*--------------------------------

	Margin / Padding Quick Resets

	example: top margin
	.element {
		@include push--top($base-spacing-unit);
	}

	example: top & bottom margin
	.element {
		@include push--ends($base-spacing-unit);
	}

	example: left & right margin
	.element {
		@include push--sides($base-spacing-unit);
	}

	example: remove a top margin
	.element {
		@include flush--top;
	}

*/
/*--------------------------------

	Helper mixins

*/
/*--------------------------------

	Form input placeholder text

	example:

	input,
	textarea {
		@include input-placeholder {
			color: $grey;
		}
	}

*/
/*--------------------------------

	Retina images

	example:

	.element {
		@include retina {
			background-image: url(../img/background@2x.png);
		}
	}

*/
/*--------------------------------

	Content margins

	fore removing first/last child margins

	example: default
	.element {
		@include content-margins;
	}

	output:
	.element > *:first-child {
		margin-top: 0;
	}
	.element > *:last-child {
		margin-bottom: 0;
	}

	example: empty selector
	.element {
		@include content-margins(false);
	}

	output:
	.element:first-child {
		margin-top: 0;
	}
	.element:last-child {
		margin-bottom: 0;
	}

*/
/*--------------------------------

	CSS Triangle

	used for creating CSS only triangles

	example:
	.element {

		&:before {
			@include css-triangle(blue, down);
		}
	}

*/
/*--------------------------------

	Hide text

	example:

	.element {
		@include hide-text;
	}

*/
/*--------------------------------

	Responsive ratio

	Used for creating scalable elements that maintain the same ratio

	example:
	.element {
		@include responsive-ratio(400, 300);
	}

*/
/*--------------------------------

	Typography

	Text image replacement, with responsive ratio

	HTML:

	<h1 class="element">
		<span>Text to replace</span>
	</h1>

	example:
	.element {
		@include typography(200, 50, 'hello-world');
	}


*/
/*--------------------------------

	Misc

*/
/*--------------------------------

	Font face

	example:

	@include font-face('Clarendon', 'clarendon-webfont');
	@include font-face('Clarendon', 'clarendon-webfont', $w-bold, italic);

*/
/*--------------------------------

	Font families

*/
/*--------------------------------

	Box sizing

*/
*,
*:before,
*:after {
  -moz-box-sizing: border-box;
       box-sizing: border-box; }

/*--------------------------------

	Basic document styling

*/
html {
  font-size: 8px;
  min-height: 100%;
  overflow-y: scroll;
  -webkit-text-size-adjust: none; }
  @media only screen and (min-width: 479px) {
    html {
      font-size: 10px; } }
  @media only screen and (min-width: 1247px) {
    html {
      font-size: 12px; } }

body {
  background-color: #fff;
  color: #1a1a1a;
  font-family: Helvetica, Arial, sans-serif;
  font-size: 1.6rem;
  line-height: 1.5; }

.site-wrapper {
  height: 100%; }

/*--------------------------------

	Text selection/highlighting

*/
::-moz-selection {
  background: #fdbc00;
  color: #fff;
  text-shadow: none; }

::selection {
  background: #fdbc00;
  color: #fff;
  text-shadow: none; }

a {
  color: #fdbc00;
  font-weight: 700;
  text-decoration: none; }
  a:focus,
  a:hover {
    outline: 0;
    text-decoration: underline; }
  a:focus {
    box-shadow: 0 0 5px #4D90FE; }
  a:link {
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0); }

img {
  display: block;
  max-width: 100%;
  font-style: italic; }

body {
  font: 16px/24px Helvetica, Arial, sans-serif; }

.system-message {
  margin-left: auto;
  margin-right: auto;
  padding: 24px;
  max-width: 460px;
  text-align: center; }
  .system-message a {
    background-color: transparent;
    color: #fdbc00;
    font-weight: bold;
    text-decoration: none; }
    .system-message a:hover,
    .system-message a:focus {
      color: #1a1a1a; }
  .system-message .logo {
    margin-left: auto;
    margin-right: auto;
    display: block;
    width: 200px; }
    .system-message .logo img {
      border: none;
      width: 100%; }
  .system-message h1,
  .system-message p {
    margin: 0;
    padding: 0; }
  .system-message h1 {
    margin-top: 20px;
    font-size: 24px; }
    @media only screen and (min-width: 639px) {
      .system-message h1 {
        margin-top: 24px;
        font-size: 32px; } }
  .system-message p {
    margin-top: 12px; }
    @media only screen and (min-width: 639px) {
      .system-message p {
        margin-top: 16px;
        font-size: 18px; } }
  @media only screen and (min-width: 639px) {
    .system-message {
      position: absolute;
      top: 50%;
      left: 50%;
      -webkit-transform: translate(-50%, -50%);
          -ms-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%); } }
/*# sourceMappingURL=main.css.map */